{"version":3,"file":"tmlabs.min.js","sources":["../node_modules/iconv-lite/lib/bom-handling.js","../node_modules/iconv-lite/encodings/internal.js","../node_modules/iconv-lite/encodings/utf16.js","../node_modules/iconv-lite/encodings/utf7.js","../node_modules/iconv-lite/encodings/sbcs-codec.js","../node_modules/iconv-lite/encodings/dbcs-codec.js","../node_modules/iconv-lite/lib/streams.js","../node_modules/encoding/lib/encoding.js","../node_modules/node-fetch/lib/fetch-error.js","../node_modules/node-fetch/lib/body.js","../node_modules/node-fetch/lib/headers.js","../node_modules/node-fetch/lib/response.js","../node_modules/node-fetch/lib/request.js","../src/constant/endpoint.js","../src/TmLabs.js","../src/command/AbstractCommand.js","../node_modules/iconv-lite/encodings/dbcs-data.js","../node_modules/iconv-lite/encodings/index.js","../node_modules/iconv-lite/lib/extend-node.js","../node_modules/encoding/lib/iconv-loader.js","../node_modules/iconv-lite/lib/index.js","../node_modules/is-stream/index.js","../node_modules/node-fetch/index.js","../src/command/FetchCommand.js","../src/Command.js","../src/index.js"],"sourcesContent":["\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    iso88591: \"binary\",\n\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (new Buffer('eda0bdedb2a9', 'hex').toString() !== 'ðŸ’©') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return new Buffer(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return new Buffer(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return new Buffer(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = new Buffer(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = new Buffer(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = new Buffer(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return new Buffer(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\n                    res += this.iconv.decode(new Buffer(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString();\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(new Buffer(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(new Buffer(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = new Buffer(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = new Buffer(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = new Buffer(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n                    res += this.iconv.decode(new Buffer(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(new Buffer(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(new Buffer(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = new Buffer(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = new Buffer(65536);\n    encodeBuf.fill(iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = new Buffer(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = new Buffer(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 decode tables.\n        var thirdByteNodeIdx = this.decodeTables.length;\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        var fourthByteNodeIdx = this.decodeTables.length;\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\n            for (var j = 0x30; j <= 0x39; j++)\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n        }\n        for (var i = 0x81; i <= 0xFE; i++)\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n        for (var i = 0x30; i <= 0x39; i++)\n            fourthByteNode[i] = GB18030_CODE\n    }        \n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0)\n            this._setEncodeChar(uCode, mbCode);\n        else if (uCode <= NODE_START)\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\n        else if (uCode <= SEQ_START)\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n    }\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = new Buffer(str.length * (this.gb18030 ? 4 : 3)), \n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = new Buffer(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBuf = new Buffer(0);\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = new Buffer(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n    \n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n        }\n        else if (uCode === GB18030_CODE) {\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode > 0xFFFF) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 + uCode % 0x400;\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBuf.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var buf = this.prevBuf.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBuf = new Buffer(0);\n        this.nodeIdx = 0;\n        if (buf.length > 0)\n            ret += this.write(buf);\n    }\n\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + Math.floor((r-l+1)/2);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n","'use strict';\n\nvar iconvLite = require('iconv-lite');\n// Load Iconv from an external file to be able to disable Iconv for webpack\n// Add /\\/iconv-loader$/ to webpack.IgnorePlugin to ignore it\nvar Iconv = require('./iconv-loader');\n\n// Expose to the world\nmodule.exports.convert = convert;\n\n/**\n * Convert encoding of an UTF-8 string or a buffer\n *\n * @param {String|Buffer} str String to be converted\n * @param {String} to Encoding to be converted to\n * @param {String} [from='UTF-8'] Encoding to be converted from\n * @param {Boolean} useLite If set to ture, force to use iconvLite\n * @return {Buffer} Encoded string\n */\nfunction convert(str, to, from, useLite) {\n    from = checkEncoding(from || 'UTF-8');\n    to = checkEncoding(to || 'UTF-8');\n    str = str || '';\n\n    var result;\n\n    if (from !== 'UTF-8' && typeof str === 'string') {\n        str = new Buffer(str, 'binary');\n    }\n\n    if (from === to) {\n        if (typeof str === 'string') {\n            result = new Buffer(str);\n        } else {\n            result = str;\n        }\n    } else if (Iconv && !useLite) {\n        try {\n            result = convertIconv(str, to, from);\n        } catch (E) {\n            console.error(E);\n            try {\n                result = convertIconvLite(str, to, from);\n            } catch (E) {\n                console.error(E);\n                result = str;\n            }\n        }\n    } else {\n        try {\n            result = convertIconvLite(str, to, from);\n        } catch (E) {\n            console.error(E);\n            result = str;\n        }\n    }\n\n\n    if (typeof result === 'string') {\n        result = new Buffer(result, 'utf-8');\n    }\n\n    return result;\n}\n\n/**\n * Convert encoding of a string with node-iconv (if available)\n *\n * @param {String|Buffer} str String to be converted\n * @param {String} to Encoding to be converted to\n * @param {String} [from='UTF-8'] Encoding to be converted from\n * @return {Buffer} Encoded string\n */\nfunction convertIconv(str, to, from) {\n    var response, iconv;\n    iconv = new Iconv(from, to + '//TRANSLIT//IGNORE');\n    response = iconv.convert(str);\n    return response.slice(0, response.length);\n}\n\n/**\n * Convert encoding of astring with iconv-lite\n *\n * @param {String|Buffer} str String to be converted\n * @param {String} to Encoding to be converted to\n * @param {String} [from='UTF-8'] Encoding to be converted from\n * @return {Buffer} Encoded string\n */\nfunction convertIconvLite(str, to, from) {\n    if (to === 'UTF-8') {\n        return iconvLite.decode(str, from);\n    } else if (from === 'UTF-8') {\n        return iconvLite.encode(str, to);\n    } else {\n        return iconvLite.encode(iconvLite.decode(str, from), to);\n    }\n}\n\n/**\n * Converts charset name if needed\n *\n * @param {String} name Character set\n * @return {String} Character set name\n */\nfunction checkEncoding(name) {\n    return (name || '').toString().trim().\n    replace(/^latin[\\-_]?(\\d+)$/i, 'ISO-8859-$1').\n    replace(/^win(?:dows)?[\\-_]?(\\d+)$/i, 'WINDOWS-$1').\n    replace(/^utf[\\-_]?(\\d+)$/i, 'UTF-$1').\n    replace(/^ks_c_5601\\-1987$/i, 'CP949').\n    replace(/^us[\\-_]?ascii$/i, 'ASCII').\n    toUpperCase();\n}\n","\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\nmodule.exports = FetchError;\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n\n\t// hide custom error implementation details from end-users\n\tError.captureStackTrace(this, this.constructor);\n\n\tthis.name = this.constructor.name;\n\tthis.message = message;\n\tthis.type = type;\n\n\t// when err.type is `system`, err.code contains system error code\n\tif (systemError) {\n\t\tthis.code = this.errno = systemError.code;\n\t}\n\n}\n\nrequire('util').inherits(FetchError, Error);\n","\n/**\n * body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\nvar convert = require('encoding').convert;\nvar bodyStream = require('is-stream');\nvar PassThrough = require('stream').PassThrough;\nvar FetchError = require('./fetch-error');\n\nmodule.exports = Body;\n\n/**\n * Body class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body, opts) {\n\n\topts = opts || {};\n\n\tthis.body = body;\n\tthis.bodyUsed = false;\n\tthis.size = opts.size || 0;\n\tthis.timeout = opts.timeout || 0;\n\tthis._raw = [];\n\tthis._abort = false;\n\n}\n\n/**\n * Decode response as json\n *\n * @return  Promise\n */\nBody.prototype.json = function() {\n\n\tvar self = this;\n\n\treturn this._decode().then(function(buffer) {\n\t\ttry {\n\t\t\treturn JSON.parse(buffer.toString());\n\t\t} catch (err) {\n\t\t\treturn Body.Promise.reject(new FetchError('invalid json response body at ' + self.url + ' reason: ' + err.message, 'invalid-json'));\n\t\t}\n\t});\n\n};\n\n/**\n * Decode response as text\n *\n * @return  Promise\n */\nBody.prototype.text = function() {\n\n\treturn this._decode().then(function(buffer) {\n\t\treturn buffer.toString();\n\t});\n\n};\n\n/**\n * Decode response as buffer (non-spec api)\n *\n * @return  Promise\n */\nBody.prototype.buffer = function() {\n\n\treturn this._decode();\n\n};\n\n/**\n * Decode buffers into utf-8 string\n *\n * @return  Promise\n */\nBody.prototype._decode = function() {\n\n\tvar self = this;\n\n\tif (this.bodyUsed) {\n\t\treturn Body.Promise.reject(new Error('body used already for: ' + this.url));\n\t}\n\n\tthis.bodyUsed = true;\n\tthis._bytes = 0;\n\tthis._abort = false;\n\tthis._raw = [];\n\n\treturn new Body.Promise(function(resolve, reject) {\n\t\tvar resTimeout;\n\n\t\t// body is string\n\t\tif (typeof self.body === 'string') {\n\t\t\tself._bytes = self.body.length;\n\t\t\tself._raw = [new Buffer(self.body)];\n\t\t\treturn resolve(self._convert());\n\t\t}\n\n\t\t// body is buffer\n\t\tif (self.body instanceof Buffer) {\n\t\t\tself._bytes = self.body.length;\n\t\t\tself._raw = [self.body];\n\t\t\treturn resolve(self._convert());\n\t\t}\n\n\t\t// allow timeout on slow response body\n\t\tif (self.timeout) {\n\t\t\tresTimeout = setTimeout(function() {\n\t\t\t\tself._abort = true;\n\t\t\t\treject(new FetchError('response timeout at ' + self.url + ' over limit: ' + self.timeout, 'body-timeout'));\n\t\t\t}, self.timeout);\n\t\t}\n\n\t\t// handle stream error, such as incorrect content-encoding\n\t\tself.body.on('error', function(err) {\n\t\t\treject(new FetchError('invalid response body at: ' + self.url + ' reason: ' + err.message, 'system', err));\n\t\t});\n\n\t\t// body is stream\n\t\tself.body.on('data', function(chunk) {\n\t\t\tif (self._abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (self.size && self._bytes + chunk.length > self.size) {\n\t\t\t\tself._abort = true;\n\t\t\t\treject(new FetchError('content size at ' + self.url + ' over limit: ' + self.size, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself._bytes += chunk.length;\n\t\t\tself._raw.push(chunk);\n\t\t});\n\n\t\tself.body.on('end', function() {\n\t\t\tif (self._abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\t\t\tresolve(self._convert());\n\t\t});\n\t});\n\n};\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   String  encoding  Target encoding\n * @return  String\n */\nBody.prototype._convert = function(encoding) {\n\n\tencoding = encoding || 'utf-8';\n\n\tvar ct = this.headers.get('content-type');\n\tvar charset = 'utf-8';\n\tvar res, str;\n\n\t// header\n\tif (ct) {\n\t\t// skip encoding detection altogether if not html/xml/plain text\n\t\tif (!/text\\/html|text\\/plain|\\+xml|\\/xml/i.test(ct)) {\n\t\t\treturn Buffer.concat(this._raw);\n\t\t}\n\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tif (!res && this._raw.length > 0) {\n\t\tfor (var i = 0; i < this._raw.length; i++) {\n\t\t\tstr += this._raw[i].toString()\n\t\t\tif (str.length > 1024) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tstr = str.substr(0, 1024);\n\t}\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(\n\t\tBuffer.concat(this._raw)\n\t\t, encoding\n\t\t, charset\n\t);\n\n};\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nBody.prototype._clone = function(instance) {\n\tvar p1, p2;\n\tvar body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (bodyStream(body) && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance.body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n","\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nmodule.exports = Headers;\n\n/**\n * Headers class\n *\n * @param   Object  headers  Response headers\n * @return  Void\n */\nfunction Headers(headers) {\n\n\tvar self = this;\n\tthis._headers = {};\n\n\t// Headers\n\tif (headers instanceof Headers) {\n\t\theaders = headers.raw();\n\t}\n\n\t// plain object\n\tfor (var prop in headers) {\n\t\tif (!headers.hasOwnProperty(prop)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (typeof headers[prop] === 'string') {\n\t\t\tthis.set(prop, headers[prop]);\n\n\t\t} else if (typeof headers[prop] === 'number' && !isNaN(headers[prop])) {\n\t\t\tthis.set(prop, headers[prop].toString());\n\n\t\t} else if (headers[prop] instanceof Array) {\n\t\t\theaders[prop].forEach(function(item) {\n\t\t\t\tself.append(prop, item.toString());\n\t\t\t});\n\t\t}\n\t}\n\n}\n\n/**\n * Return first header value given name\n *\n * @param   String  name  Header name\n * @return  Mixed\n */\nHeaders.prototype.get = function(name) {\n\tvar list = this._headers[name.toLowerCase()];\n\treturn list ? list[0] : null;\n};\n\n/**\n * Return all header values given name\n *\n * @param   String  name  Header name\n * @return  Array\n */\nHeaders.prototype.getAll = function(name) {\n\tif (!this.has(name)) {\n\t\treturn [];\n\t}\n\n\treturn this._headers[name.toLowerCase()];\n};\n\n/**\n * Iterate over all headers\n *\n * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n * @param   Boolean   thisArg   `this` context for callback function\n * @return  Void\n */\nHeaders.prototype.forEach = function(callback, thisArg) {\n\tObject.getOwnPropertyNames(this._headers).forEach(function(name) {\n\t\tthis._headers[name].forEach(function(value) {\n\t\t\tcallback.call(thisArg, value, name, this)\n\t\t}, this)\n\t}, this)\n}\n\n/**\n * Overwrite header values given name\n *\n * @param   String  name   Header name\n * @param   String  value  Header value\n * @return  Void\n */\nHeaders.prototype.set = function(name, value) {\n\tthis._headers[name.toLowerCase()] = [value];\n};\n\n/**\n * Append a value onto existing header\n *\n * @param   String  name   Header name\n * @param   String  value  Header value\n * @return  Void\n */\nHeaders.prototype.append = function(name, value) {\n\tif (!this.has(name)) {\n\t\tthis.set(name, value);\n\t\treturn;\n\t}\n\n\tthis._headers[name.toLowerCase()].push(value);\n};\n\n/**\n * Check for header name existence\n *\n * @param   String   name  Header name\n * @return  Boolean\n */\nHeaders.prototype.has = function(name) {\n\treturn this._headers.hasOwnProperty(name.toLowerCase());\n};\n\n/**\n * Delete all header values given name\n *\n * @param   String  name  Header name\n * @return  Void\n */\nHeaders.prototype['delete'] = function(name) {\n\tdelete this._headers[name.toLowerCase()];\n};\n\n/**\n * Return raw headers (non-spec api)\n *\n * @return  Object\n */\nHeaders.prototype.raw = function() {\n\treturn this._headers;\n};\n","\n/**\n * response.js\n *\n * Response class provides content decoding\n */\n\nvar http = require('http');\nvar Headers = require('./headers');\nvar Body = require('./body');\n\nmodule.exports = Response;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Response(body, opts) {\n\n\topts = opts || {};\n\n\tthis.url = opts.url;\n\tthis.status = opts.status || 200;\n\tthis.statusText = opts.statusText || http.STATUS_CODES[this.status];\n\tthis.headers = new Headers(opts.headers);\n\tthis.ok = this.status >= 200 && this.status < 300;\n\n\tBody.call(this, body, opts);\n\n}\n\nResponse.prototype = Object.create(Body.prototype);\n\n/**\n * Clone this response\n *\n * @return  Response\n */\nResponse.prototype.clone = function() {\n\treturn new Response(this._clone(this), {\n\t\turl: this.url\n\t\t, status: this.status\n\t\t, statusText: this.statusText\n\t\t, headers: this.headers\n\t\t, ok: this.ok\n\t});\n};\n","\n/**\n * request.js\n *\n * Request class contains server only options\n */\n\nvar parse_url = require('url').parse;\nvar Headers = require('./headers');\nvar Body = require('./body');\n\nmodule.exports = Request;\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nfunction Request(input, init) {\n\tvar url, url_parsed;\n\n\t// normalize input\n\tif (!(input instanceof Request)) {\n\t\turl = input;\n\t\turl_parsed = parse_url(url);\n\t\tinput = {};\n\t} else {\n\t\turl = input.url;\n\t\turl_parsed = parse_url(url);\n\t}\n\n\t// normalize init\n\tinit = init || {};\n\n\t// fetch spec options\n\tthis.method = init.method || input.method || 'GET';\n\tthis.redirect = init.redirect || input.redirect || 'follow';\n\tthis.headers = new Headers(init.headers || input.headers || {});\n\tthis.url = url;\n\n\t// server only options\n\tthis.follow = init.follow !== undefined ?\n\t\tinit.follow : input.follow !== undefined ?\n\t\tinput.follow : 20;\n\tthis.compress = init.compress !== undefined ?\n\t\tinit.compress : input.compress !== undefined ?\n\t\tinput.compress : true;\n\tthis.counter = init.counter || input.counter || 0;\n\tthis.agent = init.agent || input.agent;\n\n\tBody.call(this, init.body || this._clone(input), {\n\t\ttimeout: init.timeout || input.timeout || 0,\n\t\tsize: init.size || input.size || 0\n\t});\n\n\t// server request options\n\tthis.protocol = url_parsed.protocol;\n\tthis.hostname = url_parsed.hostname;\n\tthis.port = url_parsed.port;\n\tthis.path = url_parsed.path;\n\tthis.auth = url_parsed.auth;\n}\n\nRequest.prototype = Object.create(Body.prototype);\n\n/**\n * Clone this request\n *\n * @return  Request\n */\nRequest.prototype.clone = function() {\n\treturn new Request(this);\n};\n","/* eslint-disable import/extensions */\n\nexport const IP = 'ip';\nexport const PORT = 'port';\n","import * as Constants from './constant';\n\nexport default class TmLabs {\n  constructor(options) {\n    // console.log('Constants', Constants);\n    // console.log('Options', options);\n    if(options) {\n      try {\n        this.token = options.token;\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }\n  fetch = async (params) => {\n\n  }\n\n  doAction = async (command) => {\n\n  }\n\n  set token(token) {\n    if(!token) {\n      throw new Error(\"Token is empty!\");\n    }\n    this.token = token;\n  }\n  get token() {\n    return this.token;\n  }\n}\n","\nexport default class AbstractCommand {\n  constructor(action, params) {\n    if (new.target === AbstractCommand) {\n      throw new TypeError(\"Cannot construct AbstractCommand instance directly\");\n    }\n    if(!action) throw new ReferenceError(\"Empty action string argument\");\n    if(typeof action !== 'string') throw new ReferenceError(\"Invalid action type\");\n    if(!params) throw new ReferenceError(\"Empty params object argument\");\n    if(typeof params !== 'object') throw new ReferenceError(\"Invalid params type\");\n    if(Object.keys(params).length === 0) throw new ReferenceError(\"Empty params object\");\n    this.map = new WeakMap();\n    this.map.set(this, {\n      action,\n      params\n    });\n  }\n  set action(action) {\n    if(!action) {\n      throw new Error(\"Empty action\");\n    }\n    this.map.get(this).action = action;\n  }\n  get action() {\n    return this.map.get(this).action;\n  }\n  get params() {\n    return this.map.get(this).params;\n  }\n  set params(params) {\n    if(!params) {\n      throw new Error(\"Empty params\");\n    }\n    this.map.get(this).params = params;\n  }\n}\n","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + Â¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'â‚¬': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it. \nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    iconv.supportsNodeEncodingsExtension = !(new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n","'use strict';\n\nvar iconv_package;\nvar Iconv;\n\ntry {\n    // this is to fool browserify so it doesn't try (in vain) to install iconv.\n    iconv_package = 'iconv';\n    Iconv = require(iconv_package).Iconv;\n} catch (E) {\n    // node-iconv not present\n}\n\nmodule.exports = Iconv;\n","\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = 'ï¿½';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = new Buffer(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = (''+encoding).toLowerCase().replace(/[^0-9a-z]|:\\d{4}$/g, \"\");\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"Ä€\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files are loaded not with utf-8 encoding. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","'use strict';\n\nvar isStream = module.exports = function (stream) {\n\treturn stream !== null && typeof stream === 'object' && typeof stream.pipe === 'function';\n};\n\nisStream.writable = function (stream) {\n\treturn isStream(stream) && stream.writable !== false && typeof stream._write === 'function' && typeof stream._writableState === 'object';\n};\n\nisStream.readable = function (stream) {\n\treturn isStream(stream) && stream.readable !== false && typeof stream._read === 'function' && typeof stream._readableState === 'object';\n};\n\nisStream.duplex = function (stream) {\n\treturn isStream.writable(stream) && isStream.readable(stream);\n};\n\nisStream.transform = function (stream) {\n\treturn isStream.duplex(stream) && typeof stream._transform === 'function' && typeof stream._transformState === 'object';\n};\n","\n/**\n * index.js\n *\n * a request API compatible with window.fetch\n */\n\nvar parse_url = require('url').parse;\nvar resolve_url = require('url').resolve;\nvar http = require('http');\nvar https = require('https');\nvar zlib = require('zlib');\nvar stream = require('stream');\n\nvar Body = require('./lib/body');\nvar Response = require('./lib/response');\nvar Headers = require('./lib/headers');\nvar Request = require('./lib/request');\nvar FetchError = require('./lib/fetch-error');\n\n// commonjs\nmodule.exports = Fetch;\n// es6 default export compatibility\nmodule.exports.default = module.exports;\n\n/**\n * Fetch class\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction Fetch(url, opts) {\n\n\t// allow call as function\n\tif (!(this instanceof Fetch))\n\t\treturn new Fetch(url, opts);\n\n\t// allow custom promise\n\tif (!Fetch.Promise) {\n\t\tthrow new Error('native promise missing, set Fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = Fetch.Promise;\n\n\tvar self = this;\n\n\t// wrap http.request into fetch\n\treturn new Fetch.Promise(function(resolve, reject) {\n\t\t// build request object\n\t\tvar options = new Request(url, opts);\n\n\t\tif (!options.protocol || !options.hostname) {\n\t\t\tthrow new Error('only absolute urls are supported');\n\t\t}\n\n\t\tif (options.protocol !== 'http:' && options.protocol !== 'https:') {\n\t\t\tthrow new Error('only http(s) protocols are supported');\n\t\t}\n\n\t\tvar send;\n\t\tif (options.protocol === 'https:') {\n\t\t\tsend = https.request;\n\t\t} else {\n\t\t\tsend = http.request;\n\t\t}\n\n\t\t// normalize headers\n\t\tvar headers = new Headers(options.headers);\n\n\t\tif (options.compress) {\n\t\t\theaders.set('accept-encoding', 'gzip,deflate');\n\t\t}\n\n\t\tif (!headers.has('user-agent')) {\n\t\t\theaders.set('user-agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t\t}\n\n\t\tif (!headers.has('connection') && !options.agent) {\n\t\t\theaders.set('connection', 'close');\n\t\t}\n\n\t\tif (!headers.has('accept')) {\n\t\t\theaders.set('accept', '*/*');\n\t\t}\n\n\t\t// detect form data input from form-data module, this hack avoid the need to pass multipart header manually\n\t\tif (!headers.has('content-type') && options.body && typeof options.body.getBoundary === 'function') {\n\t\t\theaders.set('content-type', 'multipart/form-data; boundary=' + options.body.getBoundary());\n\t\t}\n\n\t\t// bring node-fetch closer to browser behavior by setting content-length automatically\n\t\tif (!headers.has('content-length') && /post|put|patch|delete/i.test(options.method)) {\n\t\t\tif (typeof options.body === 'string') {\n\t\t\t\theaders.set('content-length', Buffer.byteLength(options.body));\n\t\t\t// detect form data input from form-data module, this hack avoid the need to add content-length header manually\n\t\t\t} else if (options.body && typeof options.body.getLengthSync === 'function') {\n\t\t\t\t// for form-data 1.x\n\t\t\t\tif (options.body._lengthRetrievers && options.body._lengthRetrievers.length == 0) {\n\t\t\t\t\theaders.set('content-length', options.body.getLengthSync().toString());\n\t\t\t\t// for form-data 2.x\n\t\t\t\t} else if (options.body.hasKnownLength && options.body.hasKnownLength()) {\n\t\t\t\t\theaders.set('content-length', options.body.getLengthSync().toString());\n\t\t\t\t}\n\t\t\t// this is only necessary for older nodejs releases (before iojs merge)\n\t\t\t} else if (options.body === undefined || options.body === null) {\n\t\t\t\theaders.set('content-length', '0');\n\t\t\t}\n\t\t}\n\n\t\toptions.headers = headers.raw();\n\n\t\t// http.request only support string as host header, this hack make custom host header possible\n\t\tif (options.headers.host) {\n\t\t\toptions.headers.host = options.headers.host[0];\n\t\t}\n\n\t\t// send request\n\t\tvar req = send(options);\n\t\tvar reqTimeout;\n\n\t\tif (options.timeout) {\n\t\t\treq.once('socket', function(socket) {\n\t\t\t\treqTimeout = setTimeout(function() {\n\t\t\t\t\treq.abort();\n\t\t\t\t\treject(new FetchError('network timeout at: ' + options.url, 'request-timeout'));\n\t\t\t\t}, options.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function(err) {\n\t\t\tclearTimeout(reqTimeout);\n\t\t\treject(new FetchError('request to ' + options.url + ' failed, reason: ' + err.message, 'system', err));\n\t\t});\n\n\t\treq.on('response', function(res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\t// handle redirect\n\t\t\tif (self.isRedirect(res.statusCode) && options.redirect !== 'manual') {\n\t\t\t\tif (options.redirect === 'error') {\n\t\t\t\t\treject(new FetchError('redirect mode is set to error: ' + options.url, 'no-redirect'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (options.counter >= options.follow) {\n\t\t\t\t\treject(new FetchError('maximum redirect reached at: ' + options.url, 'max-redirect'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!res.headers.location) {\n\t\t\t\t\treject(new FetchError('redirect location header missing at: ' + options.url, 'invalid-redirect'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// per fetch spec, for POST request with 301/302 response, or any request with 303 response, use GET when following redirect\n\t\t\t\tif (res.statusCode === 303\n\t\t\t\t\t|| ((res.statusCode === 301 || res.statusCode === 302) && options.method === 'POST'))\n\t\t\t\t{\n\t\t\t\t\toptions.method = 'GET';\n\t\t\t\t\tdelete options.body;\n\t\t\t\t\tdelete options.headers['content-length'];\n\t\t\t\t}\n\n\t\t\t\toptions.counter++;\n\n\t\t\t\tresolve(Fetch(resolve_url(options.url, res.headers.location), options));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// normalize location header for manual redirect mode\n\t\t\tvar headers = new Headers(res.headers);\n\t\t\tif (options.redirect === 'manual' && headers.has('location')) {\n\t\t\t\theaders.set('location', resolve_url(options.url, headers.get('location')));\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tvar body = res.pipe(new stream.PassThrough());\n\t\t\tvar response_options = {\n\t\t\t\turl: options.url\n\t\t\t\t, status: res.statusCode\n\t\t\t\t, statusText: res.statusMessage\n\t\t\t\t, headers: headers\n\t\t\t\t, size: options.size\n\t\t\t\t, timeout: options.timeout\n\t\t\t};\n\n\t\t\t// response object\n\t\t\tvar output;\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no content-encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!options.compress || options.method === 'HEAD' || !headers.has('content-encoding') || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\toutput = new Response(body, response_options);\n\t\t\t\tresolve(output);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, check for gzip or deflate\n\t\t\tvar name = headers.get('content-encoding');\n\n\t\t\t// for gzip\n\t\t\tif (name == 'gzip' || name == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip());\n\t\t\t\toutput = new Response(body, response_options);\n\t\t\t\tresolve(output);\n\t\t\t\treturn;\n\n\t\t\t// for deflate\n\t\t\t} else if (name == 'deflate' || name == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tvar raw = res.pipe(new stream.PassThrough());\n\t\t\t\traw.once('data', function(chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\toutput = new Response(body, response_options);\n\t\t\t\t\tresolve(output);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\toutput = new Response(body, response_options);\n\t\t\tresolve(output);\n\t\t\treturn;\n\t\t});\n\n\t\t// accept string, buffer or readable stream as body\n\t\t// per spec we will call tostring on non-stream objects\n\t\tif (typeof options.body === 'string') {\n\t\t\treq.write(options.body);\n\t\t\treq.end();\n\t\t} else if (options.body instanceof Buffer) {\n\t\t\treq.write(options.body);\n\t\t\treq.end();\n\t\t} else if (typeof options.body === 'object' && options.body.pipe) {\n\t\t\toptions.body.pipe(req);\n\t\t} else if (typeof options.body === 'object') {\n\t\t\treq.write(options.body.toString());\n\t\t\treq.end();\n\t\t} else {\n\t\t\treq.end();\n\t\t}\n\t});\n\n};\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nFetch.prototype.isRedirect = function(code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n}\n\n// expose Promise\nFetch.Promise = global.Promise;\nFetch.Response = Response;\nFetch.Headers = Headers;\nFetch.Request = Request;\n","import fetch from 'node-fetch';\nimport AbstractCommand from './AbstractCommand';\nimport { endpoints } from '../constant';\n\nexport default class FetchCommand extends AbstractCommand{\n  constructor(params) {\n    super('fetch', params);\n    const { method, fetchFunc } = params;\n    const methods = FetchCommand.getMethods();\n\n    if (!method) throw new TypeError(\"Empty required param 'method'\");\n    if (!Object.values(methods).includes(method)) throw new TypeError(\"Invalid method param\");\n    if (fetchFunc) this.fetchFunc = fetchFunc;\n    else this.fetchFunc = fetch;\n\n    this.api_url = 'https://tempicolabs.com/';\n    this.version = 'v2';\n    this.map.get(this).method = method;\n  }\n  static makeRequest = async (url, params = {}, fetchFunc = false) => {\n    if(!url) throw new ReferenceError(\"Empty url\");\n    if(!fetchFunc) fetchFunc = fetch;\n    try {\n      let { headers, body, method } = params;\n      if(!headers) headers = {\n        'Content-Type': 'application/json'\n      };\n      if(!method) method = 'GET';\n      const response = await fetchFunc(url, {\n        headers,\n        method,\n      });\n      return response;\n    } catch(e) {\n      console.error(e);\n    }\n  }\n  static getMethods() {\n    return endpoints;\n  }\n  set method(method) {\n    if(!method) {\n      throw new ReferenceError(\"Empty method\");\n    }\n    this.map.get(this).method = method;\n  }\n  get method() {\n    return this.map.get(this).method;\n  }\n  do = async () => {\n    const url = `${this.api_url}api/${this.version}/${this.method}`;\n    let response;\n    try {\n      response = await FetchCommand.makeRequest(url);\n      if(!response.ok) {\n        response = {\n          error: true,\n          status: response.status,\n          statusText: response.statusText,\n        };\n      }\n    } catch(err) {\n      console.error(err);\n    }\n    return response;\n  }\n}\n","import AbstractCommand from './command/AbstractCommand';\nimport FetchCommand from './command/FetchCommand';\n\nexport default class Command extends AbstractCommand{\n  constructor(action, params) {\n    super(action, params);\n    if(!this.instance) {\n      throw new TypeError(\"Action not found\");\n    }\n  }\n  static getClass(action = false) {\n    if(!action) throw new ReferenceError(\"Action param empty\");\n    switch (action) {\n      case 'fetch':\n        return FetchCommand;\n      default:\n        throw new ReferenceError('Action not found');\n    }\n  }\n  get class() {\n    const action = this.map.get(this).action;\n    return Command.getClass(action);\n  }\n  get instance() {\n    const commandClass = this.class;\n    return new commandClass(this.params);\n  }\n  do() {\n    if(this.instance) return this.instance.do();\n  }\n}\n","import TmLabs from './TmLabs';\nimport Command from './Command';\n\n//\nconst fetch = async (params) => {\n  const tmLabs = new TmLabs();\n  const answer = await tmLabs.doAction(new Command('fetch', params));\n  return answer;\n};\n//\nexport default TmLabs;\nexport { TmLabs, fetch }\n"],"names":["encoder","addBOM","decoder","pass","options","enc","codecOptions","encodingName","bomAware","toString","defaultCharUnicode","iconv","call","codec","prevStr","acc","contBytes","accBytes","overflowByte","getEncoder","initialBytes","initialBytesLen","defaultEncoding","buf","length","asciiCharsLE","asciiCharsBE","Math","min","i","inBase64","base64Accum","base64AccumIdx","Error","chars","type","asciiString","String","decodeBuf","encodeBuf","fill","defaultCharSingleByte","charCodeAt","table","mappingTable","decodeTables","UNASSIGNED_NODE","slice","decodeTableSeq","_addDecodeChunk","encodeTable","encodeTableSeq","skipEncodeChars","encodeSkipVals","j","val","from","to","_fillEncodeTable","encodeAdd","uChar","Object","prototype","hasOwnProperty","_setEncodeChar","defCharSB","gb18030","thirdByteNodeIdx","thirdByteNode","fourthByteNodeIdx","fourthByteNode","secondByteNodeIdx","NODE_START","secondByteNode","leadSurrogate","seqObj","nodeIdx","prevBuf","l","r","mid","conv","decodeStrings","encoding","response","convert","iconvLite","decode","encode","name","trim","replace","toUpperCase","captureStackTrace","constructor","message","code","errno","systemError","opts","body","bodyUsed","size","timeout","_raw","_abort","self","prop","_headers","headers","raw","set","isNaN","Array","forEach","append","item","url","status","statusText","http","STATUS_CODES","ok","url_parsed","input","parse_url","init","method","redirect","follow","compress","counter","agent","_clone","protocol","hostname","port","path","auth","floor","fromCharCode","TmLabs","fetch","doAction","token","error","AbstractCommand","new","target","TypeError","ReferenceError","keys","map","WeakMap","get","action","params","BOMChar","PrependBOMWrapper","write","end","StripBOMWrapper","res","stripBOM","Buffer","require$$0","InternalCodec","StringDecoder","require$$1","InternalDecoder","InternalEncoder","InternalEncoderBase64","completeQuads","str","InternalEncoderCesu8","bufIdx","charCode","InternalDecoderCesu8","curByte","Utf16BECodec","Utf16BEEncoder","Utf16BEDecoder","buf2","Utf16Codec","Utf16Encoder","Utf16Decoder","push","concat","detectEncoding","getDecoder","trail","Utf7Codec","nonDirectChars","Utf7Encoder","chunk","bind","base64Regex","base64Chars","test","minusChar","andChar","Utf7Decoder","lastI","b64str","canBeDecoded","Utf7IMAPCodec","Utf7IMAPEncoder","base64IMAPChars","Utf7IMAPDecoder","SBCSCodec","SBCSEncoder","SBCSDecoder","newBuf","idx1","idx2","UNASSIGNED","GB18030_CODE","SEQ_START","DEF_CHAR","DBCSCodec","_getDecodeTrieNode","bytes","addr","node","curAddr","parseInt","writeTable","k","part","codeTrail","len","seq","m","_getEncodeBucket","high","uCode","bucket","low","_setEncodeSequence","oldVal","mbCode","prefix","DBCSEncoder","nextChar","dbcsCode","resCode","subtable","idx","findIdx","uChars","gbChars","DBCSDecoder","prevBufOffset","seqStart","curSeq","ptr","uCodeLead","ret","require$$2","require$$6","modules","exports","module","Transform","encodeStream","decodeStream","supportsStreams","IconvLiteEncoderStream","IconvLiteDecoderStream","_collect","collect","create","value","_transform","done","_flush","chunks","on","isBuffer","iconv_package","Iconv","original","supportsNodeEncodingsExtension","Uint8Array","extendNodeEncodings","nodeNativeEncodings","isNativeEncoding","toLowerCase","SlowBuffer","SlowBufferToString","start","SlowBufferWrite","isFinite","swap","remaining","string","offset","RangeError","copy","BufferIsEncoding","isEncoding","encodingExists","BufferByteLength","byteLength","BufferToString","BufferWrite","_offset","_length","_encoding","Readable","ReadableSetEncoding","setEncoding","_readableState","undoExtendNodeEncodings","encodings","skipDecodeWarning","getCodec","toEncoding","fromEncoding","_codecDataCache","codecDef","key","bomHandling","PrependBOM","StripBOM","nodeVer","process","versions","nodeVerArr","split","Number","require","isStream","stream","pipe","writable","_write","babelHelpers.typeof","_writableState","readable","_read","duplex","transform","_transformState","inherits","checkEncoding","result","convertIconv","convertIconvLite","PassThrough","Body","json","_decode","then","JSON","parse","buffer","Promise","reject","err","text","_bytes","resTimeout","resolve","_convert","setTimeout","ct","charset","exec","substr","pop","p1","p2","instance","bodyStream","getBoundary","global","Headers","list","getAll","has","getOwnPropertyNames","Response","clone","Request","Fetch","send","https","request","getLengthSync","_lengthRetrievers","hasKnownLength","host","reqTimeout","req","once","abort","isRedirect","statusCode","location","resolve_url","output","response_options","statusMessage","zlib","createGunzip","createInflate","createInflateRaw","FetchCommand","fetchFunc","methods","getMethods","values","includes","api_url","version","makeRequest","do","Command","getClass","commandClass","class","tmLabs"],"mappings":"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"}